name: Deploy Monorepo

on:
  push:
    branches: [main]

jobs:
  build_and_push:
    name: Build and push images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build & push backend-api
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/backend-api/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_BACKEND_API }}

      - name: Build & push backend-admin
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/backend-admin/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_BACKEND_ADMIN }}

      - name: Build & push bot
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/bot/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_BOT }}

      - name: Build & push frontend-admin
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/frontend-admin/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_FRONTEND_ADMIN }}

      - name: Build & push frontend-landing
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/frontend-landing/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_FRONTEND_LANDING }}

      - name: Build & push frontend-main
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/frontend-main/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_FRONTEND_MAIN }}

  remote_deploy:
    name: Remote deploy via SSH
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Remote deploy via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          script: |
            set -euo pipefail
            echo "Starting remote deploy"

            # Жёстко указываем путь к репозиторию
            DEPLOY_DIR="/root/pesherkino-deploy/pesherkino-monorepo"
            echo "Using DEPLOY_DIR=$DEPLOY_DIR"

            # Проверка существования и контента
            cd "$DEPLOY_DIR" || (echo "deploy dir not found: $DEPLOY_DIR" && exit 1)
            pwd
            ls -la

            # Обновление репозитория
            git fetch --all
            git reset --hard origin/main

            # Обновление Docker Compose
            docker compose -f docker-compose.prod.yml pull --ignore-pull-failures
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

            echo "Deploy finished"

      - name: Очистка неиспользуемых Docker-образов
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          script: |
            docker image prune -af

      - name: Smoke test (https endpoints)
        run: |
          for url in https://${API_HOST} https://${ADMIN_API_HOST} https://${FRONTEND_ADMIN_HOST} https://${FRONTEND_LANDING_HOST} https://${FRONTEND_MAIN_HOST}; do
            echo "Testing $url ..."
            curl -k --max-time 10 --retry 3 --retry-connrefused $url || exit 1
          done
